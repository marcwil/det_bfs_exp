
# header, source and executable files
set(HEADERS
    include/framework/graph.hpp
    include/framework/graph_parser.hpp
    include/framework/graph_writer.hpp
    include/framework/graph_generator.hpp
    include/framework/component_structure.hpp
    include/framework/timer.hpp
    include/framework/random.hpp
    include/framework/bibfs.hpp
)

set(SOURCE_FILES
    src/graph.cpp
    src/graph_parser.cpp
    src/graph_writer.cpp
    src/graph_generator.cpp
    src/component_structure.cpp
    src/timer.cpp
    src/random.cpp
    src/bibfs.cpp
)

# create a library of the framework
configure_file(include/framework/paths.h.in include/framework/paths.h)
add_library(framework SHARED ${HEADERS} ${SOURCE_FILES})
target_link_libraries(framework girgs)
target_include_directories(framework PUBLIC include lib ${CMAKE_CURRENT_BINARY_DIR}/include)
target_compile_options(framework PUBLIC
    -Wall -Wextra -pedantic
    -fsanitize=address,undefined
    -fno-omit-frame-pointer
    -fno-sanitize-recover=all
)
target_link_options(framework PUBLIC
    -fsanitize=address,undefined
    -fno-omit-frame-pointer
)

